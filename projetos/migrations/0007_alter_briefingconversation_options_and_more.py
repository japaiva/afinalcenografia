# Generated by Django 5.1.7 on 2025-04-16 02:28

import core.storage
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0008_agente_task_instructions'),
        ('projetos', '0006_conversa'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='briefingconversation',
            options={'ordering': ['-timestamp']},
        ),
        migrations.RemoveField(
            model_name='briefing',
            name='categoria',
        ),
        migrations.RemoveField(
            model_name='projeto',
            name='data_inicio',
        ),
        migrations.RemoveField(
            model_name='projeto',
            name='prazo_entrega',
        ),
        migrations.RemoveField(
            model_name='projeto',
            name='requisitos',
        ),
        migrations.AddField(
            model_name='briefing',
            name='altura_piso_outro',
            field=models.CharField(blank=True, help_text="Especifique outra altura se selecionou 'Outra Elevação'", max_length=20, null=True, verbose_name='Outra Altura de Piso'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='ativacao_descricao',
            field=models.TextField(blank=True, help_text='Detalhes sobre a ativação planejada', null=True, verbose_name='Descrição da Ativação'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='categoria_projeto',
            field=models.CharField(blank=True, help_text='Ex: Evento Corporativo, Evento Social, TV, Varejo, etc.', max_length=100, null=True, verbose_name='Categoria do Projeto'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='copa_requisitos',
            field=models.TextField(blank=True, help_text='Pia, geladeira, bancada, prateleiras, etc.', null=True, verbose_name='Requisitos da Copa'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='deposito_requisitos',
            field=models.TextField(blank=True, help_text='Prateleiras, tamanho, etc.', null=True, verbose_name='Requisitos do Depósito'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='equipamentos',
            field=models.TextField(blank=True, help_text='Painel de LED, TV, equipamentos específicos, etc.', null=True, verbose_name='Equipamentos Necessários'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='estilo_estande',
            field=models.CharField(blank=True, help_text='Ex: Moderno, Clean, Futurista, Rústico, etc.', max_length=100, null=True, verbose_name='Estilo do Estande'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='lounge_descricao',
            field=models.TextField(blank=True, help_text='Detalhes sobre o lounge desejado', null=True, verbose_name='Descrição do Lounge'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='piso_elevado',
            field=models.CharField(blank=True, choices=[('nao', 'Sem Elevação'), ('3cm', 'Elevado 3cm'), ('10cm', 'Elevado 10cm'), ('outro', 'Outra Elevação')], help_text='Elevação desejada para o piso', max_length=20, null=True, verbose_name='Piso Elevado'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='quantidade_mesas_atendimento',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Quantas mesas de atendimento?', null=True, verbose_name='Quantidade de Mesas'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='sala_reuniao_capacidade',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Quantas pessoas na sala de reunião?', null=True, verbose_name='Capacidade da Sala'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='sala_reuniao_requisitos',
            field=models.TextField(blank=True, help_text='Prateleiras, TV, armário, etc.', null=True, verbose_name='Requisitos da Sala'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_ativacao',
            field=models.BooleanField(default=False, help_text='Haverá alguma ativação especial no estande?', verbose_name='Ativação no Estande'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_balcao_cafe',
            field=models.BooleanField(default=False, help_text='O estande precisa ter balcão para café/bar?', verbose_name='Balcão para Café/Bar'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_balcao_recepcao',
            field=models.BooleanField(default=False, help_text='O estande precisa ter balcão de recepção?', verbose_name='Balcão Recepção'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_balcao_vitrine',
            field=models.BooleanField(default=False, help_text='O estande precisa ter balcão com vitrine?', verbose_name='Balcão Vitrine'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_caixa',
            field=models.BooleanField(default=False, help_text='O estande precisa ter caixa para vendas?', verbose_name='Caixa para Vendas'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_copa',
            field=models.BooleanField(default=False, help_text='O estande precisa ter copa?', verbose_name='Copa'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_deposito',
            field=models.BooleanField(default=False, help_text='O estande precisa ter depósito?', verbose_name='Depósito'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_lounge',
            field=models.BooleanField(default=False, help_text='O estande precisa ter área de lounge?', verbose_name='Lounge'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_mesas_atendimento',
            field=models.BooleanField(default=False, help_text='O estande precisa ter mesas de atendimento?', verbose_name='Mesas de Atendimento'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_sala_reuniao',
            field=models.BooleanField(default=False, help_text='O estande precisa ter sala de reunião?', verbose_name='Sala de Reunião'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='tem_vitrine',
            field=models.BooleanField(default=False, help_text='O estande precisa ter vitrine para exposição de produtos?', verbose_name='Vitrine para Exposição'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='testeira',
            field=models.CharField(blank=True, choices=[('reta', 'Reta'), ('curvada', 'Curvada'), ('outro', 'Outro Estilo')], help_text='Estilo da testeira do estande', max_length=20, null=True, verbose_name='Tipo de Testeira'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='venda_no_estande',
            field=models.BooleanField(default=False, help_text='Selecione se haverá venda de produtos no estande', verbose_name='Haverá Venda no Estande?'),
        ),
        migrations.AddField(
            model_name='briefing',
            name='vitrine_descricao',
            field=models.TextField(blank=True, help_text='Detalhes sobre a vitrine desejada', null=True, verbose_name='Descrição da Vitrine'),
        ),
        migrations.AddField(
            model_name='projeto',
            name='cidade_evento',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade'),
        ),
        migrations.AddField(
            model_name='projeto',
            name='estado_evento',
            field=models.CharField(blank=True, max_length=2, null=True, verbose_name='UF'),
        ),
        migrations.AddField(
            model_name='projeto',
            name='feira',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projetos', to='core.feira', verbose_name='Feira'),
        ),
        migrations.AddField(
            model_name='projeto',
            name='local_evento',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Local do Evento'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='acabamentos',
            field=models.TextField(blank=True, help_text='Acabamentos, texturas ou efeitos especiais desejados', null=True, verbose_name='Acabamentos Desejados'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='altura',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Altura desejada para o estande em metros', max_digits=5, null=True, verbose_name='Altura (m)'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='descricao_detalhada',
            field=models.TextField(blank=True, help_text='Descreva em detalhes o que você imagina para o estande', null=True, verbose_name='Descrição Detalhada'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='dimensoes',
            field=models.PositiveIntegerField(blank=True, help_text='Área total aproximada do estande em metros quadrados', null=True, verbose_name='Dimensões (m²)'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='eletrica',
            field=models.TextField(blank=True, help_text='Pontos elétricos, voltagens especiais, etc.', null=True, verbose_name='Necessidades Elétricas'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='iluminacao',
            field=models.TextField(blank=True, help_text='Requisitos de iluminação para o estande', null=True, verbose_name='Iluminação'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='materiais_preferidos',
            field=models.TextField(blank=True, help_text='Materiais que gostaria de utilizar no estande', null=True, verbose_name='Materiais Preferidos'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='mobiliario',
            field=models.TextField(blank=True, help_text='Descrição do mobiliário necessário', null=True, verbose_name='Mobiliário'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='objetivos',
            field=models.TextField(blank=True, help_text='O que você espera alcançar com este estande?', null=True, verbose_name='Objetivos do Estande'),
        ),
        migrations.AlterField(
            model_name='briefing',
            name='paleta_cores',
            field=models.CharField(blank=True, help_text='Cores predominantes, referências Pantone ou descrição', max_length=200, null=True, verbose_name='Paleta de Cores'),
        ),
        migrations.AlterField(
            model_name='briefingarquivoreferencia',
            name='arquivo',
            field=models.FileField(storage=core.storage.MinioStorage(), upload_to='briefing/referencias/'),
        ),
        migrations.AlterField(
            model_name='briefingarquivoreferencia',
            name='tipo',
            field=models.CharField(choices=[('imagem', 'Imagem'), ('planta', 'Planta'), ('logo', 'Logo'), ('campanha', 'Imagem de Campanha'), ('referencia', 'Referência de Estande'), ('documento', 'Documento'), ('outro', 'Outro')], max_length=50),
        ),
        migrations.AlterField(
            model_name='briefingvalidacao',
            name='secao',
            field=models.CharField(choices=[('informacoes_basicas', 'Informações Básicas'), ('detalhes_tecnicos', 'Detalhes Técnicos'), ('materiais_acabamentos', 'Materiais e Acabamentos'), ('requisitos_tecnicos', 'Requisitos Técnicos')], max_length=50),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='briefing_status',
            field=models.CharField(choices=[('nao_iniciado', 'Não Iniciado'), ('em_andamento', 'Em Andamento'), ('enviado', 'Enviado'), ('aprovado', 'Aprovado'), ('reprovado', 'Reprovado')], default='nao_iniciado', max_length=20, verbose_name='Status do Briefing'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projetos', to=settings.AUTH_USER_MODEL, verbose_name='Cliente'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='descricao',
            field=models.TextField(blank=True, null=True, verbose_name='Descrição'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='empresa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projetos', to='core.empresa', verbose_name='Empresa'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='nome',
            field=models.CharField(max_length=200, verbose_name='Nome do Projeto'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='orcamento',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Orçamento Total (R$)'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='progresso',
            field=models.IntegerField(default=0, help_text='Progresso em porcentagem (0-100)', verbose_name='Progresso'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='status',
            field=models.CharField(choices=[('pendente', 'Pendente'), ('ativo', 'Ativo'), ('pausado', 'Pausado'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='pendente', max_length=20, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='tem_briefing',
            field=models.BooleanField(default=False, verbose_name='Possui Briefing'),
        ),
        migrations.AlterField(
            model_name='projeto',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Última Atualização'),
        ),
        migrations.CreateModel(
            name='ProjetoPlanta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome da Planta')),
                ('arquivo', models.FileField(storage=core.storage.MinioStorage(), upload_to='projetos/plantas/', verbose_name='Arquivo da Planta')),
                ('tipo', models.CharField(choices=[('localizacao', 'Planta de Localização'), ('estande', 'Planta do Estande'), ('pavilhao', 'Planta do Pavilhão'), ('outro', 'Outro Tipo')], max_length=50, verbose_name='Tipo de Planta')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('projeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plantas', to='projetos.projeto')),
            ],
            options={
                'verbose_name': 'Planta do Projeto',
                'verbose_name_plural': 'Plantas do Projeto',
                'db_table': 'projeto_plantas',
            },
        ),
        migrations.CreateModel(
            name='ProjetoReferencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome da Referência')),
                ('arquivo', models.FileField(storage=core.storage.MinioStorage(), upload_to='projetos/referencias/', verbose_name='Arquivo de Referência')),
                ('tipo', models.CharField(choices=[('estande_anterior', 'Estande Anterior'), ('estilo_visual', 'Estilo Visual'), ('logotipo', 'Logotipo'), ('campanha', 'Material de Campanha'), ('imagem', 'Imagem de Referência'), ('documento', 'Documento'), ('outro', 'Outro')], max_length=50, verbose_name='Tipo de Referência')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('projeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referencias', to='projetos.projeto')),
            ],
            options={
                'verbose_name': 'Referência do Projeto',
                'verbose_name_plural': 'Referências do Projeto',
                'db_table': 'projeto_referencias',
            },
        ),
        migrations.DeleteModel(
            name='ArquivoReferencia',
        ),
    ]
