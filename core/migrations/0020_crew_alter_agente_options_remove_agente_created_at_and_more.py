# Generated by Django 5.1.7 on 2025-06-30 08:36

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0019_empresa_razao_social_usuario_sexo'),
    ]

    operations = [
        migrations.CreateModel(
            name='Crew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do crew', max_length=200)),
                ('descricao', models.TextField(help_text='Descrição do que o crew faz')),
                ('processo', models.CharField(choices=[('sequential', 'Sequencial'), ('hierarchical', 'Hierárquico')], default='sequential', max_length=20)),
                ('verbose', models.BooleanField(default=True, help_text='Logs detalhados durante execução')),
                ('memory', models.BooleanField(default=True, help_text='Usar memória entre execuções')),
                ('manager_llm_provider', models.CharField(blank=True, default='openai', max_length=50)),
                ('manager_llm_model', models.CharField(blank=True, help_text='Modelo para o manager', max_length=100)),
                ('manager_llm_temperature', models.FloatField(blank=True, default=0.2, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Crew',
                'verbose_name_plural': 'Crews',
                'ordering': ['nome'],
            },
        ),
        migrations.AlterModelOptions(
            name='agente',
            options={'ordering': ['nome'], 'verbose_name': 'Agente', 'verbose_name_plural': 'Agentes'},
        ),
        migrations.RemoveField(
            model_name='agente',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='agente',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='agente',
            name='atualizado_em',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='agente',
            name='crew_backstory',
            field=models.TextField(blank=True, help_text='Background do agente no contexto do crew'),
        ),
        migrations.AddField(
            model_name='agente',
            name='crew_goal',
            field=models.TextField(blank=True, help_text='Objetivo específico dentro do crew'),
        ),
        migrations.AddField(
            model_name='agente',
            name='crew_role',
            field=models.CharField(blank=True, help_text='Papel específico dentro do crew', max_length=200),
        ),
        migrations.AddField(
            model_name='agente',
            name='criado_em',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='agente',
            name='tipo',
            field=models.CharField(choices=[('individual', 'Agente Individual'), ('crew_member', 'Membro de Crew')], default='individual', max_length=20),
        ),
        migrations.AlterField(
            model_name='agente',
            name='ativo',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='agente',
            name='descricao',
            field=models.TextField(blank=True, default=django.utils.timezone.now, help_text='Descrição da função do agente'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='agente',
            name='llm_model',
            field=models.CharField(help_text='Ex: gpt-4, claude-3-opus', max_length=100),
        ),
        migrations.AlterField(
            model_name='agente',
            name='llm_provider',
            field=models.CharField(default='openai', max_length=50),
        ),
        migrations.AlterField(
            model_name='agente',
            name='llm_system_prompt',
            field=models.TextField(help_text='Prompt base do agente'),
        ),
        migrations.AlterField(
            model_name='agente',
            name='llm_temperature',
            field=models.FloatField(default=0.3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AlterField(
            model_name='agente',
            name='nome',
            field=models.CharField(help_text='Nome descritivo do agente', max_length=200),
        ),
        migrations.AlterField(
            model_name='agente',
            name='task_instructions',
            field=models.TextField(blank=True, default=django.utils.timezone.now, help_text='Instruções específicas para tarefas'),
            preserve_default=False,
        ),
        migrations.AlterModelTable(
            name='agente',
            table=None,
        ),
        migrations.CreateModel(
            name='CrewExecucao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projeto_id', models.PositiveIntegerField(blank=True, null=True)),
                ('briefing_id', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('running', 'Executando'), ('completed', 'Concluído'), ('failed', 'Falhou'), ('timeout', 'Timeout')], default='running', max_length=20)),
                ('iniciado_em', models.DateTimeField(auto_now_add=True)),
                ('finalizado_em', models.DateTimeField(blank=True, null=True)),
                ('tempo_execucao', models.PositiveIntegerField(blank=True, help_text='Tempo em segundos', null=True)),
                ('input_data', models.JSONField(help_text='Dados de entrada para o crew')),
                ('output_data', models.JSONField(blank=True, default=dict, help_text='Resultado da execução')),
                ('logs_execucao', models.TextField(blank=True, help_text='Logs detalhados da execução')),
                ('erro_detalhado', models.TextField(blank=True, help_text='Detalhes do erro se houver')),
                ('tokens_utilizados', models.PositiveIntegerField(default=0)),
                ('custo_estimado', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('crew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execucoes', to='core.crew')),
                ('usuario_solicitante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Execução de Crew',
                'verbose_name_plural': 'Execuções de Crew',
                'ordering': ['-iniciado_em'],
            },
        ),
        migrations.CreateModel(
            name='CrewTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da tarefa', max_length=200)),
                ('descricao', models.TextField(help_text='Descrição detalhada da tarefa')),
                ('expected_output', models.TextField(help_text='Descrição do output esperado')),
                ('ordem_execucao', models.PositiveIntegerField(default=1)),
                ('async_execution', models.BooleanField(default=False, help_text='Execução assíncrona')),
                ('context_template', models.TextField(blank=True, help_text='Template para contexto da tarefa')),
                ('tools_config', models.JSONField(blank=True, default=dict, help_text='Configuração de ferramentas específicas')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('agente_responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_responsavel', to='core.agente')),
                ('crew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.crew')),
                ('dependencias', models.ManyToManyField(blank=True, related_name='dependentes', to='core.crewtask')),
            ],
            options={
                'verbose_name': 'Tarefa do Crew',
                'verbose_name_plural': 'Tarefas do Crew',
                'ordering': ['crew', 'ordem_execucao'],
            },
        ),
        migrations.CreateModel(
            name='CrewMembro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem_execucao', models.PositiveIntegerField(default=1, help_text='Ordem de execução no crew')),
                ('pode_delegar', models.BooleanField(default=False, help_text='Pode delegar tarefas para outros agentes')),
                ('max_iter', models.PositiveIntegerField(default=15, help_text='Máximo de iterações para este agente')),
                ('max_execution_time', models.PositiveIntegerField(default=300, help_text='Tempo máximo de execução em segundos')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('agente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crews', to='core.agente')),
                ('crew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membros', to='core.crew')),
            ],
            options={
                'verbose_name': 'Membro do Crew',
                'verbose_name_plural': 'Membros do Crew',
                'ordering': ['crew', 'ordem_execucao'],
                'unique_together': {('crew', 'agente')},
            },
        ),
    ]
